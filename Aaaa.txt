import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.lines as mlines
from scipy.spatial import Delaunay
import numpy as np

# Example data
data = {
    'from': ['A', 'B', 'C', 'D'],
    'to': ['B', 'C', 'D', 'A']
}
df = pd.DataFrame(data)

# Create a list of unique nodes
nodes = list(set(df['from']).union(set(df['to'])))

# Assign random positions to nodes within a unit square
np.random.seed(42)  # For reproducibility
positions = {node: np.random.rand(2) for node in nodes}

# Create a dataframe to store node positions
node_positions_df = pd.DataFrame(positions).T.reset_index()
node_positions_df.columns = ['node', 'x', 'y']

# Plotting the network graph
plt.figure(figsize=(8, 8))
ax = plt.gca()

# Plot the nodes
for node, (x, y) in positions.items():
    ax.scatter(x, y, s=100)
    ax.text(x, y, node, fontsize=12, ha='right')

# Plot the edges
for _, row in df.iterrows():
    start_pos = positions[row['from']]
    end_pos = positions[row['to']]
    line = mlines.Line2D([start_pos[0], end_pos[0]], [start_pos[1], end_pos[1]])
    ax.add_line(line)

plt.title('Network Graph')
plt.xlabel('X')
plt.ylabel('Y')
plt.grid(True)
plt.show()

# Exporting node positions to a dataframe
print(node_positions_df)

# Save the dataframe to a CSV file
node_positions_df.to_csv('node_positions.csv', index=False)
